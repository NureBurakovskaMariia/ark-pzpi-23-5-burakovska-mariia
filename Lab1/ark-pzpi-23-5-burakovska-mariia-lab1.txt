  МІНІСТЕРСТВО ОСВІТИ І НАУКИ УКРАЇНИ
ХАРКІВСЬКИЙ НАЦІОНАЛЬНИЙ УНІВЕРСИТЕТ РАДІОЕЛЕКТРОНІКИ
КАФЕДРА ПРОГРАМНОЇ ІНЖЕНЕРІЇ







Звіт
з лабораторної роботи № 3 з дисципліни
Аналіз та рефакторинг коду






Виконала:                                                                 Перевірив:
ст. гр. ПЗПІ-23-5                        			ст. викладач кафедри ПІ
Бураковська Марія					Сокорчук Ігор Петрович







Харків 2025
1 ІСТОРІЯ ЗМІН

№ДатаВерсія звітуОпис змін та виправлень115.10.20250.1Створення структури звіду та заповнення Додатку Б



2 ЗАВДАННЯ

     Створити опис проєкту у форматі Vision & Scope, включивши такі розділи:
     1.1 Аналіз проблеми: Яку проблему вирішує система? Чому вона важлива? Як поточні підходи не задовольняють потреб?
     1.2 Аналіз аналогів: Огляд існуючих систем чи рішень. Які недоліки вони мають? Як нова система покращить ситуацію?
     2.1 Опис призначення системи: Що робить система? Яку цінність вона створює для користувачів?
     2.2 Опис бізнес-логіки: Як працюватиме система з погляду бізнес-процесів. Які дії виконуватимуть користувачі?
     3.1 Опис функціональності серверної частини та IoT-клієнта: Які завдання виконує сервер? Які функції виконує IoT-клієнт?
     3.2 Опис функціональності веб-клієнта та мобільного клієнта: Які функції мають веб- та мобільні інтерфейси? Як вони взаємодіють із сервером?
     4.3 Опис програмних засобів та інструментів: Які технології будуть використані? Системи управління версіями, мови програмування, середовища розробки тощо.


     3 ОПИС ВИКОНАНОЇ РОБОТИ


4 ВИСНОВКИ


5 ВИКОРИСТАНІ ДЖЕРЕЛА


ДОДАТОК А


ДОДАТОК Б
     
     1.1. Аналіз проблеми
   У сучасних притулках для тварин часто виникають труднощі з ефективним управлінням ресурсами, контролем умов утримання, обліком тварин і координацією волонтерів.
   Багато процесів виконуються вручну або ведуться у таблицях, що призводить до:
* втрати або дублювання інформації про тварин;
* відсутності системного моніторингу стану притулку;
* труднощів у комунікації між адміністрацією та волонтерами;
* низької прозорості у звітності щодо донатів.
   Це знижує ефективність роботи та негативно впливає на якість догляду за тваринами.
Тому виникає потреба у комплексній програмній системі, яка дозволить автоматизувати основні процеси, забезпечити аналітику та контроль умов утримання.
     1.2. Аналіз аналогів
   	Існуючі рішення (наприклад, ShelterBuddy, PetPoint, RescueGroups) надають окремі функції — облік тварин або управління волонтерами — але не підтримують моніторинг середовища та інтеграцію з IoT.
   	Основні недоліки аналогів:
* відсутність інтеграції між обліком тварин і умовами утримання;
* складні інтерфейси або висока вартість;
* обмежений доступ через мобільні пристрої.
   	Запропонована система покращить ситуацію за рахунок:
* єдиної бази даних для адміністраторів, волонтерів і користувачів;
* веб- та мобільного клієнтів з інтуїтивним інтерфейсом;
* модулю-емулятора IoT, який генерує тестові дані про температуру й вологість у приміщенні притулку, імітуючи роботу сенсорів.
2.1. Опис призначення системи
	Система призначена для:
* обліку тварин (дані, медична історія, вакцинації, статус усиновлення);
* управління волонтерами, завданнями та графіками;
* ведення обліку донатів та матеріальної допомоги;
* моніторингу умов утримання тварин через модуль-емулятор IoT;
* взаємодії з користувачами, які бажають усиновити тварину.
	Цінність для користувачів:
* для адміністрації — автоматизація обліку й аналітики;
* для волонтерів — зручне планування роботи;
* для громадян — швидкий доступ до інформації про тварин і можливість допомоги притулку.
     2.2 Опис бізнес-логіки
Основні бізнес-процеси системи:
* адміністратор або працівник притулку додає інформацію про нову тварину;
* система зберігає дані у центральній базі;
* IoT-емулятор передає тестові показники середовища до сервера;
* сервер обробляє дані, формує записи у базі та, при потребі, генерує сповіщення (наприклад, про підвищену температуру в клітці);
* через веб-або мобільний застосунок користувачі зможуть переглядати інформацію, редагувати її, отримувати повідомлення та статистику.
     3.1 Опис функціональності серверної частини та IoT-клієнта
     Серверна частина:
* прийом і обробка запитів від IoT-емулятора;
* зберігання даних у базі (інформація про тварин, показники датчиків, журнали подій);
* авторизація користувачів (адміністраторів, волонтерів);
* надання REST-API для клієнтських застосунків.
     IoT-клієнт (програмна симуляція):
* генерує тестові дані про стан умов у клітках;
* відправляє ці дані на сервер через HTTP-запити або MQTT-протокол;
* отримує відповіді про статус або сповіщення від сервера.
     3.2 Опис функціональності веб-клієнта та мобільного клієнта
     Веб-клієнт:
1. перегляд списку тварин і стану кліток;
2. додавання або редагування записів;
3. візуалізація даних сенсорів (графіки, таблиці);
4. управління волонтерами та завданнями;
5. облік і керування донатами:
1) сторінка прийому донатів (онлайн-формат для платежів / інструкції для переказів);
2) реєстрація матеріальних пожертв (їжа, препарати, інвентар);
3) генерація звітів по донатах;
4) прив’язка донатів до конкретних потреб/кампаній (наприклад, збір на лікування тварини).
     Мобільний клієнт:
1. швидкий доступ до бази тварин;
2. отримання push-сповіщень (наприклад, про потребу у волонтерській допомозі чи важливі оновлення);
3. можливість пошуку тварини для прилаштування;
4. перегляд останніх оновлень і статусів;
5. функції донатів для користувачів:
1) швидка форма для одноразових пожертв та інструкції для матеріальної допомоги;
2) перегляд історії власних пожертв та отриманих подяк/квитанцій.

